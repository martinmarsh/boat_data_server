{"version":3,"sources":["Compass.js","Helm.js","Config.js","Simulator.js","App.js","index.js","media/compass_rose.svg"],"names":["SteeringCompass","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","rose","displayed","cts","heading","_this$props","heading_svg","document","getElementById","console","log","setAttribute","heading_course","heading_rose","updateSVGCompass","react_default","a","createElement","className","react_svg","src","compass_rose","Component","Helm","handleCTSSliderChange","event","cts_slider_value","setState","conditionSetCTS","postCts","handleTrimSliderChange","trim_slider_value","trim","isLoaded","updated","rudder","power","pitch","roll","config_host","end_point","set_cts","local_control","local_control_count_down","_this2","undefined","url","fetch","then","response","json","result","calibration","_this3","method","headers","Accept","Content-Type","body","JSON","stringify","_this4","getCompass","timer","setInterval","setCTS","clearInterval","value","Math","round","_this5","_this$state","power_bar","power_width","abs","rudder_mark","colour","compass","cal","compass_cal","accel_cal","giro_cal","sys_cal","Compass","Paper_default","width","height","x","y","fill","Button_default","color","onClick","Slider_default","aria-labelledby","onChange","size","adjust","Config","handleCalibrationButton","action","set_cal","postCalibration","handleKpSliderChange","slider_kp","relativePerCent","slider_kd","slider_ki","handleKdSliderChange","handleKiSliderChange","handleGainSliderChange","slider_gain","max_value","max","gain_slider_multiplier","handleRudderRateSliderChange","slider_rudder_rate","rudder_rate","rudder_rate_scale","toFixed","kp","kd","ki","gain","can_update","setCalibrationState","setTimeout","getCalibration","variant","e","principle","b","factor","Simulator","handleSpeedSliderChange","slider_speed","speed","speed_scale","postSimulation","handlePowerBiasSliderChange","slider_power_bias","power_bias","power_bias_scale","gain_scale","handleChange","name","defineProperty","target","checked","on","checkedSimulator","setSimulationState","getSimulation","simulator_control","FormGroup_default","row","FormControlLabel_default","control","Switch_default","label","TabContainer","Typography_default","component","style","padding","children","App","r","conf","host","classes","CssBaseline_default","AppBar_default","position","Toolbar_default","Tabs_default","Tab_default","Grid_default","container","root","spacing","item","course","src_Helm","paper","src_Config","src_Simulator","withStyles","theme","flexGrow","backgroundColor","palette","background","unit","textAlign","text","secondary","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"4PA+DeA,cAzDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,KACPC,KAAM,GAGVT,EAAKU,UAAY,CACbD,MAAO,EACPE,KAAM,EACNC,SAAU,GAVCZ,kFAcD,IAAAa,EACOV,KAAKJ,MAArBa,EADSC,EACTD,QAASD,EADAE,EACAF,IACVF,EAAON,KAAKI,MAAME,KACtB,GAAIG,IAAYT,KAAKO,UAAUE,QAAS,CAEpC,IAAME,EAAcC,SAASC,eAAe,mBACxCF,IACAG,QAAQC,IAAIJ,GACZA,EAAYK,aAAa,YAAa,UAAYP,EAAU,aAE5DT,KAAKO,UAAUE,QAAUA,GAGjC,GAAID,IAAQR,KAAKO,UAAUC,IAAI,CAC3B,IAAMS,EAAiBL,SAASC,eAAe,kBAC5CI,IACCH,QAAQC,IAAIE,GACZA,EAAeD,aAAa,YAAa,UAAYR,EAAO,cAIpE,GAAIF,IAASN,KAAKO,UAAUD,KAAK,CAC7B,IAAMY,EAAeN,SAASC,eAAe,gBAC1CK,IACCJ,QAAQC,IAAIG,GACZA,EAAaF,aAAa,YAAa,UAAYV,EAAO,aAE1DN,KAAKO,UAAUD,KAAOA,qCAOlC,OADIN,KAAKmB,mBAELC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUC,IAAKC,cAnDGC,+CC6PfC,cAzPX,SAAAA,EAAYhC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACf/B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMJ,KA6HViC,sBAAwB,SAACC,EAAOC,GAC5BlC,EAAKmC,SAAS,CAAED,qBAChBlC,EAAKoC,gBAAwC,KAAvBF,EAAiB,KACvClC,EAAKqC,WAjIUrC,EAoInBsC,uBAAyB,SAACL,EAAOM,GAC7BvC,EAAKmC,SAAS,CAAEI,sBAChB,IAAIC,GAAQD,EAAoB,IAAK,GAAKvC,EAAKO,MAAM2B,iBAAmB,GACxElC,EAAKoC,gBAAuB,IAAPI,GACrBxC,EAAKqC,WAtILrC,EAAKO,MAAQ,CACTC,MAAO,KACPiC,UAAU,EACVC,SAAS,EACT/B,IAAK,EACLC,QAAS,EACTH,KAAM,EACNkC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNZ,iBAAkB,GAClBK,kBAAmB,IAEvBtB,QAAQC,IAAI,iBAAmB6B,GAE/B/C,EAAKgD,UAAY,mBACjBhD,EAAKiD,QAAU,EACfjD,EAAKkD,cAAgB,EACrBlD,EAAKmD,yBAA2B,EArBjBnD,4EAwBP,IAAAoD,EAAAjD,KACRc,QAAQC,IAAI,iBAAmB6B,GAEZ,KAAhBA,SACiBM,IAAblD,KAAKmD,MACJnD,KAAKmD,IAAMP,EAAc5C,KAAK6C,WAElCO,MAAMpD,KAAKmD,KACNE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACG,SAACG,GACGP,EAAKjB,SAAS,CACVM,UAAU,EACVC,SAAS,EACT/B,IAAKgD,EAAOhD,IACZC,QAAS+C,EAAO/C,QAChBiC,MAAOc,EAAOd,MACdC,KAAMa,EAAOb,KACbH,OAAQgB,EAAOhB,OACfC,MAAOe,EAAOf,MACdgB,YAAaD,EAAOC,eAM5B,SAACpD,GACG4C,EAAKjB,SAAS,CACVM,UAAU,EACVC,SAAS,EACTlC,+CAQf,IAAAqD,EAAA1D,KACLoD,MAAMpD,KAAKmD,IAAK,CACZQ,OAAQ,OACRC,QAAS,CACLC,OAAU,oCACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACbzD,IAAOR,KAAK8C,YAErBO,KAAK,SAAAG,GAAM,OAAEA,EAAOD,SAClBF,KAAK,SAAAG,GACEE,EAAKX,cAAgBW,EAAKV,yBAC1BU,EAAK1B,SAAS,CACVM,UAAU,EACVC,SAAS,EACT/B,IAAKgD,EAAOhD,IACZC,QAAS+C,EAAO/C,wDAOhB,IAAAyD,EAAAlE,KAChBA,KAAKmE,aACLnE,KAAKoE,MAAQC,YAAY,WACrBH,EAAKC,aACFD,EAAKpB,UAAYoB,EAAK9D,MAAMI,MACxB0D,EAAKnB,cAAgB,EACpBmB,EAAKnB,gBAELmB,EAAKI,OAAOJ,EAAK9D,MAAMI,OAGhC,oDAIH+D,cAAcvE,KAAKoE,+CAGPI,GACTA,EAAQ,IACPA,EAAQ,IAAMA,GAEdA,EAAQ,MACRA,GAAS,KAEbxE,KAAK8C,QAAU2B,KAAKC,MAAMF,kCAGvBA,GACHxE,KAAKiC,gBAAgBuC,GACrB,IAAKzC,EAAmB0C,KAAKC,MAAM1E,KAAK8C,QAAQ,IAAM,IACnDf,EAAmB,IAClBA,EAAmB,IAAMA,GAE1BA,EAAmB,MAClBA,GAAoB,KAExB/B,KAAKgC,SAAS,CAAED,sDAgBX,IAAA4C,EAAA3E,KAAA4E,EAC0F5E,KAAKI,MAA5F2B,EADH6C,EACG7C,iBAAkBvB,EADrBoE,EACqBpE,IAAM4B,EAD3BwC,EAC2BxC,kBAAmBqB,EAD9CmB,EAC8CnB,YAAajB,EAD3DoC,EAC2DpC,OAAQC,EADnEmC,EACmEnC,MAAOC,EAD1EkC,EAC0ElC,MAAOC,EADjFiC,EACiFjC,KAChFlC,EAAYT,KAAKI,MAAjBK,QACNA,EAAUgE,KAAKC,MAAMjE,GACrB,IAAIoE,EAAY,IACZC,EAAc,IAAML,KAAKM,IAAItC,EAAM,KACnCuC,EAAc,IAAMxC,EAAO,GAAG,IAC9ByC,EAAS,QACVxC,EAAQ,IACPwC,EAAS,MACTJ,EAAY,IAAMpC,EAAM,IAAK,KAEjC,IASIyC,EATAC,EAAM1B,EACN2B,EAAoB,EAAND,EAEdE,EAAkB,GADtBF,KAAc,GAGVG,EAAiB,GADrBH,KAAc,GAGVI,EAAgB,GADpBJ,KAAc,GASlB,OAJQD,EADDlF,KAAKI,MAAMmC,QACCnB,EAAAC,EAAAC,cAACkE,EAAD,CAAiBhF,IAAKR,KAAK8C,QAASrC,QAAST,KAAKI,MAAMK,UAEzDW,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,KAAOD,EAAAC,EAAAC,cAAA,+BAAuBtB,KAAKmD,MAGzC/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAakC,EAA5B,MAA4C8B,EAA5C,KAAuDD,EAAvD,KAAmED,EAAnE,KAAgFD,GAChFhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV2D,GAGL9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKoE,MAAM,MAAMC,OAAO,KACpBvE,EAAAC,EAAAC,cAAA,QAAMsE,EAAGf,EAAWgB,EAAE,IAAIH,MAAOZ,EAAaa,OAAO,IAAIG,KAAMb,IAC/D7D,EAAAC,EAAAC,cAAA,QAAMsE,EAAGZ,EAAaU,MAAM,IAAIC,OAAO,IAAIG,KAAK,SAChD1E,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,MAAOF,MAAM,IAAIC,OAAO,IAAIG,KAAK,UACzC1E,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,IAAKF,MAAM,IAAIC,OAAO,IAAIG,KAAK,UACvC1E,EAAAC,EAAAC,cAAA,QAAMsE,EAAE,MAAOF,MAAM,IAAIC,OAAO,IAAIG,KAAK,WAG5C1E,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,SAAIb,GAAhB,uBAAsDW,EAAAC,EAAAC,cAAA,SAAId,GAA1D,MACAY,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,SAAIqB,GAAb,wBAAiDvB,EAAAC,EAAAC,cAAA,SAAIoB,IACtDtB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAS2E,MAAM,UAAUC,QACzB,WACItB,EAAKL,OAAQK,EAAK7B,QAAU,IAC5B6B,EAAKzC,YAHT,OAKAd,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAU2E,MAAM,UAAUC,QAC1B,WACItB,EAAKL,OAAQK,EAAK7B,QAAU,GAC5B6B,EAAKzC,YAHT,OAMJd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQ2E,MAAM,UAAUC,QACxB,WACItB,EAAKL,OAAQK,EAAK7B,QAAU,GAC5B6B,EAAKzC,YAHT,MAMAd,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQ2E,MAAM,UAAUC,QACxB,WACItB,EAAKL,OAAQK,EAAK7B,QAAU,IAC5B6B,EAAKzC,YAHT,QAMJd,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAOzC,EACPoE,kBAAgB,UAChBC,SAAUpG,KAAK6B,yBAI3BT,EAAAC,EAAAC,cAAA,WA7CA,IA6COF,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,0BACIF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAOpC,EACP+D,kBAAgB,cAChBC,SAAUpG,KAAKmC,yBAEnBf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQgF,KAAK,QAAQL,MAAM,UAAWC,QAClC,WACItB,EAAK5B,cAAgB4B,EAAK3B,yBAC1B,IAAIsD,EAAqC,KAA3BlE,EAAoB,IAClCuC,EAAKL,OAAOK,EAAK7B,QAAQwD,GACzB3B,EAAK3C,SAAS,CAAEI,kBAAmB,OAL3C,QAUAhB,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQgF,KAAK,QAAQL,MAAM,UAAUC,QACjC,WACItB,EAAK1C,gBAAwC,KAAvBF,EAAiB,KACvC4C,EAAKzC,UACLyC,EAAK3C,SAAS,CAAEI,kBAAmB,OAJ3C,mBA7OLT,aCwPJ4E,cAxPX,SAAAA,EAAY3G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,IACf1G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyG,GAAApG,KAAAH,KAAMJ,KAiIV4G,wBAAyB,SAAC1E,EAAO2E,GAC7B5G,EAAKmC,SAAS,CAAC0E,QAASD,IACxB5G,EAAK8G,mBApIU9G,EAuInB+G,qBAAuB,SAAC9E,EAAO+E,GAC3B,IAAIrD,EAAS+C,EAAOO,gBAAgBD,EAAWhH,EAAKO,MAAM2G,UAAWlH,EAAKO,MAAM4G,WAChFH,EAAYrD,EAAO,GACnB,IAAIuD,EAAYvD,EAAO,GACnBwD,EAAYxD,EAAO,GACvB3D,EAAKmC,SAAS,CAAE6E,YAAWE,YAAWC,cACtCnH,EAAK8G,mBA7IU9G,EAiJnBoH,qBAAuB,SAACnF,EAAOiF,GAC3B,IAAIvD,EAAS+C,EAAOO,gBAAgBC,EAAWlH,EAAKO,MAAMyG,UAAWhH,EAAKO,MAAM4G,WAChFD,EAAYvD,EAAO,GACnB,IAAIqD,EAAYrD,EAAO,GACnBwD,EAAYxD,EAAO,GACvB3D,EAAKmC,SAAS,CAAE6E,YAAWE,YAAWC,cACtCnH,EAAK8G,mBAvJU9G,EA0JnBqH,qBAAuB,SAACpF,EAAOkF,GAC3B,IAAIxD,EAAS+C,EAAOO,gBAAgBE,EAAWnH,EAAKO,MAAMyG,UAAWhH,EAAKO,MAAM2G,WAChFC,EAAYxD,EAAO,GACnB,IAAIqD,EAAYrD,EAAO,GACnBuD,EAAYvD,EAAO,GACvB3D,EAAKmC,SAAS,CAAE6E,YAAWE,YAAWC,cACtCnH,EAAK8G,mBAhKU9G,EAmKnBsH,uBAAyB,SAACrF,EAAOsF,GAC7BA,EAAc3C,KAAKC,MAAM0C,GAEzB,IAAIC,GADJD,EAAc3C,KAAK6C,IAAIF,EAAa,IACNvH,EAAKO,MAAMmH,uBACzC1H,EAAKmC,SAAS,CAACoF,cAAaC,cAC5BxH,EAAK8G,mBAxKU9G,EA2KnB2H,6BAA8B,SAAC1F,EAAO2F,GAClC,IAAIC,GAAeD,EAAqB5H,EAAK8H,mBAAmBC,QAAQ,GACxE/H,EAAKmC,SAAW,CAACyF,qBAAoBC,gBACrC7H,EAAK8G,mBA5KL9G,EAAKO,MAAQ,CACTC,MAAO,KACPiC,UAAU,EACVC,SAAS,EACTsF,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,KAAM,EACNN,YAAa,EACbhB,QAAS,EACTG,UAAW,EACXG,UAAW,EACXD,UAAW,EACXK,YAAa,EACbK,mBAAoB,EACpBF,uBAAwB,IAG5B1H,EAAKgD,UAAY,mBACjBhD,EAAKoI,YAAa,EAClBpI,EAAK8H,kBAAoB,GAtBV9H,mFAyBC2D,GAChB,IAAIqE,EAAKrE,EAAOqE,GACZC,EAAKtE,EAAOsE,GACZC,EAAKvE,EAAOuE,GACZV,EAAYQ,EAAKC,EAAKC,EAEtBC,EAAO,KADXX,EAAW5C,KAAK6C,IAAID,EAAW,KAG/BvG,QAAQC,IAAIsG,EAAWW,GACvBhI,KAAKgC,SAAS,CACVM,UAAU,EACVC,SAAS,EACTsF,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJL,YAAalE,EAAOkE,YACpBL,UAAWA,EACXR,UAAWpC,KAAKC,MAAMmD,EAAKG,GAC3BjB,UAAWtC,KAAKC,MAAMoD,EAAKE,GAC3BhB,UAAWvC,KAAKC,MAAMqD,EAAKC,GAC3BZ,YAAa3C,KAAKC,MAAM2C,EAAUrH,KAAKI,MAAMmH,wBAC7CE,mBAAoBhD,KAAKC,MAAMlB,EAAOkE,YAAc1H,KAAK2H,mBACzDjB,QAASlD,EAAOkD,QAChBjD,YAAaD,EAAOC,uDAIZ,IAAAR,EAAAjD,KACO,KAAhB4C,SACkBM,IAAblD,KAAKmD,MACLnD,KAAKmD,IAAMP,EAAc5C,KAAK6C,WAElCO,MAAMpD,KAAKmD,KACNE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACG,SAACG,GACGP,EAAKiF,oBAAoB1E,IAK7B,SAACnD,GACG4C,EAAKjB,SAAS,CACVM,UAAU,EACVC,SAAS,EACTlC,uDAQP,IAAAqD,EAAA1D,KACVA,KAAKiI,aACJjI,KAAKiI,YAAa,EAClBE,WAAW,WAGP/E,MAAMM,EAAKP,IAAK,CACZQ,OAAQ,OACRC,QAAS,CACLC,OAAU,oCACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB4D,GAAMnE,EAAKtD,MAAMyG,UAAYnD,EAAKtD,MAAMiH,UAAY,IACpDS,GAAMpE,EAAKtD,MAAM2G,UAAYrD,EAAKtD,MAAMiH,UAAY,IACpDU,GAAMrE,EAAKtD,MAAM4G,UAAYtD,EAAKtD,MAAMiH,UAAY,IACpDK,YAAehE,EAAKtD,MAAMsH,YAC1BhB,QAAWhD,EAAKtD,MAAMsG,YAE3BrD,KAAK,SAAAG,GAAM,OAAIA,EAAOD,SACpBF,KAAK,SAAAG,GACEE,EAAKwE,oBAAoB1E,GACzBE,EAAKuE,YAAa,KAI/B,kDAIS,IAAA/D,EAAAlE,KAChBA,KAAKoI,iBACLpI,KAAKoE,MAAQC,YAAY,WACrBH,EAAKkE,kBACN,oDAIH7D,cAAcvE,KAAKoE,wCA6Dd,IAAAO,EAAA3E,KAAA4E,EACsE5E,KAAKI,MAAzEyG,EADFjC,EACEiC,UAAWE,EADbnC,EACamC,UAAWC,EADxBpC,EACwBoC,UAAWI,EADnCxC,EACmCwC,YAAaK,EADhD7C,EACgD6C,mBAkErD,OAhEGzH,KAAKI,MAAMmC,QAGNnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACVF,EAAAC,EAAAC,cAAA,0BAAkBuF,EAAlB,KACAzF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACAmD,MAAOqC,EACPV,kBAAgB,SAChBC,SAAUpG,KAAK4G,uBAGfxF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,0BAAkByF,EAAlB,KACA3F,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACAmD,MAAOuC,EACPZ,kBAAgB,SAChBC,SAAUpG,KAAKiH,uBAGf7F,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,0BAAkB0F,EAAlB,KACA5F,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACAmD,MAAOwC,EACPb,kBAAgB,SAChBC,SAAUpG,KAAKkH,uBAGf9F,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,8BAAsB8F,EAAcpH,KAAKI,MAAMmH,wBAC/CnG,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACAmD,MAAO4C,EACPjB,kBAAgB,SAChBC,SAAUpG,KAAKmH,yBAEf/F,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,iCAAyBmG,EAAqBzH,KAAK2H,mBAAmBC,QAAQ,GAA9E,uBACIxG,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAOiD,EACPtB,kBAAgB,kBAChBC,SAAUpG,KAAKwH,+BAGvBpG,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAOE,UAAU,OAEjBH,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQgH,QAAQ,YAAYhC,KAAK,QAAQL,MAAM,UAAWC,QAC1D,SAACqC,GACG3D,EAAK6B,wBAAwB8B,EAAG,KAFpC,SAHA,mCASAlH,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAAQgH,QAAQ,YAAYhC,KAAK,QAAQL,MAAM,UAAUC,QACzD,SAACqC,GACG3D,EAAK6B,wBAAwB8B,EAAG,KAFpC,SAIAlH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,aAKNF,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,KAAOD,EAAAC,EAAAC,cAAA,+BAAuBtB,KAAKmD,gDA1H9BoF,EAAWlH,EAAGmH,GAGjC,IAAIC,GAAU,IAAMF,KAFpBlH,GAAK,KACLmH,GAAK,KAKL,MAAO,CAHPD,EAAY9D,KAAKC,MAAM6D,GACvBlH,EAAIoD,KAAKC,MAAMrD,EAAIoH,GACnBD,EAAI/D,KAAKC,MAAM8D,EAAIC,WA/HN9G,wEC0MN+G,cAtMX,SAAAA,EAAY9I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,IACf7I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4I,GAAAvI,KAAAH,KAAMJ,KA2GV+I,wBAA0B,SAAC7G,EAAO8G,GAC9B,IAAIC,GAASD,EAAe/I,EAAKiJ,aAAalB,QAAQ,GACtD/H,EAAKmC,SAAS,CAAE4G,eAAcC,UAC9BhJ,EAAKkJ,kBA/GUlJ,EAmHnBmJ,4BAA6B,SAAClH,EAAOmH,GAEjC,IAAIC,IADJD,GAAqB,IACiBpJ,EAAKsJ,iBAAmB,IAAIvB,QAAQ,GAC1E/H,EAAKmC,SAAS,CAAEiH,oBAAmBC,eACnCrJ,EAAKkJ,kBAvHUlJ,EA0HnBsH,uBAAyB,SAACrF,EAAOsF,GAC7B,IAAIY,GAASZ,EAAcvH,EAAKuJ,YAAYxB,QAAQ,GACpD/H,EAAKmC,SAAS,CAACoF,cAAaY,SAC5BnI,EAAKkJ,kBA7HUlJ,EAgInBwJ,aAAe,SAAAC,GAAI,OAAI,SAAAxH,GACnBjC,EAAKmC,SAALlC,OAAAyJ,EAAA,EAAAzJ,CAAA,GAAiBwJ,EAAOxH,EAAM0H,OAAOC,UACrC5J,EAAKkJ,mBAhILlJ,EAAKO,MAAQ,CACTC,MAAO,KACPiC,UAAU,EACVC,SAAS,EACTmH,GAAI,EACJ1B,KAAM,EACNa,MAAO,EACPK,WAAY,EACZ9B,YAAa,EACbwB,aAAc,EACdK,kBAAmB,EACnBU,iBAAkB,GAGtB9J,EAAKgD,UAAY,kBACjBhD,EAAKoI,YAAa,EAClBpI,EAAKuJ,WAAa,EAClBvJ,EAAKiJ,YAAc,GACnBjJ,EAAKsJ,iBAAmB,GApBTtJ,kFAwBA2D,GACfxD,KAAKgC,SAAS,CACVM,UAAU,EACVC,SAAS,EACTmH,GAAIlG,EAAOkG,GACX1B,KAAMxE,EAAOwE,KACba,MAAOrF,EAAOqF,MACdK,WAAY1F,EAAO0F,WACnBS,iBAAkBnG,EAAOkG,GACzBtC,YAAa3C,KAAKC,MAAMlB,EAAOwE,KAAOhI,KAAKoJ,YAC3CR,aAAcnE,KAAKC,MAAMlB,EAAOqF,MAAQ7I,KAAK8I,aAC7CG,kBAAmBxE,KAAKC,MAAMlB,EAAO0F,WAAalJ,KAAKmJ,iBAAiB,8CAIjE,IAAAlG,EAAAjD,KACQ,KAAhB4C,SACkBM,IAAblD,KAAKmD,MACLnD,KAAKmD,IAAMP,EAAc5C,KAAK6C,WAElCO,MAAMpD,KAAKmD,KACNE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACG,SAACG,GACGP,EAAK2G,mBAAmBpG,IAK5B,SAACnD,GACG4C,EAAKjB,SAAS,CACVM,UAAU,EACVC,SAAS,EACTlC,sDAQR,IAAAqD,EAAA1D,KACTA,KAAKiI,aACJjI,KAAKiI,YAAa,EAClBE,WAAW,WAEP,IAAIuB,EAAK,EACNhG,EAAKtD,MAAMuJ,mBACVD,EAAK,GAETtG,MAAMM,EAAKP,IAAK,CACZQ,OAAQ,OACRC,QAAS,CACLC,OAAU,oCACVC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjByF,GAAIA,EACJ1B,KAAMtE,EAAKtD,MAAM4H,KACjBa,MAAOnF,EAAKtD,MAAMyI,MAClBK,WAAYxF,EAAKtD,MAAM8I,eAE5B7F,KAAK,SAAAG,GAAM,OAAIA,EAAOD,SACpBF,KAAK,SAAAG,GACEE,EAAKkG,mBAAmBpG,GACxBE,EAAKuE,YAAa,KAI/B,kDAIS,IAAA/D,EAAAlE,KAChBA,KAAK6J,gBACL7J,KAAKoE,MAAQC,YAAY,WACrBH,EAAK2F,iBACN,oDAIHtF,cAAcvE,KAAKoE,wCA4Bd,IAAAQ,EACkD5E,KAAKI,MAArDwI,EADFhE,EACEgE,aAAcxB,EADhBxC,EACgBwC,YAAa6B,EAD7BrE,EAC6BqE,kBAE9Ba,EAAoB1I,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,CAAW2I,KAAG,GAClC5I,EAAAC,EAAAC,cAAC2I,EAAA5I,EAAD,CACI6I,QACI9I,EAAAC,EAAAC,cAAC6I,EAAA9I,EAAD,CACIoI,QAASzJ,KAAKI,MAAMuJ,iBACpBvD,SAAUpG,KAAKqJ,aAAa,oBAC5B7E,MAAM,mBACNwB,MAAM,YAIdoE,MAAM,kBA+ClB,OA1COpK,KAAKI,MAAMmC,QACPvC,KAAKI,MAAMsJ,GACAtI,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACJwI,EACD1I,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,qBAAasH,EAAe5I,KAAK8I,aAAalB,QAAQ,GAAtD,QACAxG,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAOoE,EACPzC,kBAAgB,YAChBC,SAAUpG,KAAK2I,0BAInBvH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,mBAAWmD,KAAKC,MAAO0C,EAAcpH,KAAKoJ,aAC1ChI,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAO4C,EACPjB,kBAAgB,SAChBC,SAAUpG,KAAKmH,yBAGnB/F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,6BAAqB2H,EAAoBjJ,KAAKmJ,kBAAkBvB,QAAQ,GAAxE,eACAxG,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACImD,MAAOyE,EAAoB,GAC3B9C,kBAAgB,iBAChBC,SAAUpG,KAAKgJ,8BAEnB5H,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAIAF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACAwI,EACD1I,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YAIPF,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,KAAOD,EAAAC,EAAAC,cAAA,+BAAuBtB,KAAKmD,aAjMjCxB,4ICOxB,SAAS0I,EAAazK,GAClB,OACIwB,EAAAC,EAAAC,cAACgJ,EAAAjJ,EAAD,CAAYkJ,UAAU,MAAMC,MAAO,CAAEC,QAAS,KACzC7K,EAAM8K,UAKnB,IAAI9H,EAAc,GAsBZ+H,cAEF,SAAAA,EAAY/K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2K,IACf9K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6K,GAAAxK,KAAAH,KAAMJ,KAYVyJ,aAAe,SAACvH,EAAO0C,GACnB3E,EAAKmC,SAAS,CAAEwC,WAZhB3E,EAAKO,MAAQ,CACToE,MAAO,GAEXpB,MAAM,gBACDC,KAAK,SAACuH,GAAD,OAAOA,EAAErH,SACdF,KAAM,SAAAwH,GACH/J,QAAQC,IAAI,eAAiB8J,EAAKC,MAClClI,EAAciI,EAAKC,OATZjL,wEAkBV,IACGkL,EAAY/K,KAAKJ,MAAjBmL,QACAvG,EAAUxE,KAAKI,MAAfoE,MACR,OACIpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,MACAD,EAAAC,EAAAC,cAAC2J,EAAA5J,EAAD,CAAQ6J,SAAS,UACb9J,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,2CAIAD,EAAAC,EAAAC,cAAC8J,EAAA/J,EAAD,CAAMmD,MAAOA,EAAO4B,SAAUpG,KAAKqJ,cAC/BjI,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAK+I,MAAM,eACXhJ,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAK+I,MAAM,qBACXhJ,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CAAK+I,MAAM,0BAGR,IAAV5F,GAAepD,EAAAC,EAAAC,cAAC+I,EAAD,KACAjJ,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMkK,WAAS,EAAChK,UAAWwJ,EAAQS,KAAMC,QAAS,IAC9CrK,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMqK,MAAI,GACNtK,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAQE,UAAWwJ,EAAQY,QAAQvK,EAAAC,EAAAC,cAACsK,EAAD,UAIhD,IAAVpH,GAAepD,EAAAC,EAAAC,cAAC+I,EAAD,KACAjJ,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMkK,WAAS,EAAChK,UAAWwJ,EAAQS,KAAMC,QAAS,IAC9CrK,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMqK,MAAI,GACNtK,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAOE,UAAWwJ,EAAQY,QACtBvK,EAAAC,EAAAC,cAACsK,EAAD,QAIRxK,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMqK,MAAI,GACNtK,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAOE,UAAWwJ,EAAQc,OAC1BzK,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACwK,EAAD,QAIJ1K,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CAAMqK,MAAI,GACNtK,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAOE,UAAWwJ,EAAQc,OAC1BzK,EAAAC,EAAAC,cAAA,wBACDF,EAAAC,EAAAC,cAACyK,EAAD,UAKZ,IAAVvH,GAAepD,EAAAC,EAAAC,cAAC+I,EAAD,KAAcjJ,EAAAC,EAAAC,cAACyK,EAAD,eAnE3BpK,aA0EJqK,uBA9FA,SAAAC,GAAK,MAAK,CACrBT,KAAM,CACFU,SAAU,EACVC,gBAAiBF,EAAMG,QAAQC,WAAWR,OAE9CF,OAAO,CACHlB,QAA8B,EAArBwB,EAAMR,QAAQa,KACvBC,UAAW,SACXvG,MAAOiG,EAAMG,QAAQI,KAAKC,UAC1B9G,OAAQ,IACRD,MAAO,KAEXmG,MAAO,CACHpB,QAA8B,EAArBwB,EAAMR,QAAQa,KACvBC,UAAW,SACXvG,MAAOiG,EAAMG,QAAQI,KAAKC,aA+EnBT,CAAmBrB,UCpHlC+B,IAASC,OACPvL,EAAAC,EAAAC,cAACsL,EAAD,MACAhM,SAASC,eAAe,6BCP1BgM,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.09c9a89a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport compass_rose from './media/compass_rose.svg';\nimport ReactSVG from 'react-svg';\n\n\nclass SteeringCompass extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            rose: 0,\n\n        };\n        this.displayed = {\n            rose: -1,\n            cts: -1,\n            heading: -1,\n        }\n    }\n\n    updateSVGCompass(){\n        let {heading, cts} = this.props;\n        let rose = this.state.rose;\n        if (heading !== this.displayed.heading) {\n            // $('#headingDisplay').val(this.heading);\n            const heading_svg = document.getElementById('compass_heading');\n            if (heading_svg) {\n                console.log(heading_svg);\n                heading_svg.setAttribute(\"transform\", \"rotate(\" + heading + \",600,600)\");\n                //heading_svg.setAttribute(\"transform-origin\", \"600 600\");\n                this.displayed.heading = heading\n                }\n        }\n        if (cts !== this.displayed.cts){\n            const heading_course = document.getElementById('compass_course');\n            if(heading_course){\n                console.log(heading_course);\n                heading_course.setAttribute(\"transform\", \"rotate(\" + cts  + \",600,600)\");\n                //heading_course.setAttribute(\"transform-origin\", \"50% 50%\");\n            }\n        }\n        if (rose !== this.displayed.rose){\n            const heading_rose = document.getElementById('compass_rose');\n            if(heading_rose) {\n                console.log(heading_rose);\n                heading_rose.setAttribute(\"transform\", \"rotate(\" + rose + \",600,600)\");\n                //heading_rose.setAttribute(\"transform-origin\", \"50% 50%\");\n                this.displayed.rose = rose\n            }\n        }\n    }\n\n    render() {\n        this.updateSVGCompass();\n    return (\n        <div className=\"App-Compass\">\n            <ReactSVG src={compass_rose} />\n        </div>\n\n    );\n  }\n}\n\nexport default SteeringCompass;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport SteeringCompass from './Compass';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {config_host} from './App';\n\n\nclass Helm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            cts: 0,\n            heading: 0,\n            rose: 0,\n            rudder: 0,\n            power: 0,\n            pitch: 0,\n            roll: 0,\n            cts_slider_value: 50,\n            trim_slider_value: 50,\n        };\n        console.log('configuration:' + config_host);\n        //this.url = process.env.REACT_APP_THIS_HOST + \":8079/api/orientation\";\n        this.end_point = \"/api/orientation\";\n        this.set_cts = 0;\n        this.local_control = 0;\n        this.local_control_count_down = 3;\n    }\n\n    getCompass(){\n        console.log('configuration:' + config_host);\n\n        if(config_host !== \"\") {\n            if(this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: true,\n                            cts: result.cts,\n                            heading: result.heading,\n                            pitch: result.pitch,\n                            roll: result.roll,\n                            rudder: result.rudder,\n                            power: result.power,\n                            calibration: result.calibration,\n                        });\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postCts(){\n        fetch(this.url, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    \"cts\": this.set_cts\n                })\n        }).then(result=>result.json())\n            .then(result => {\n                    this.local_control = this.local_control_count_down;\n                    this.setState({\n                        isLoaded: true,\n                        updated: true,\n                        cts: result.cts,\n                        heading: result.heading,\n                    });\n                },\n            );\n\n    }\n\n    componentDidMount() {\n        this.getCompass();\n        this.timer = setInterval(() => {\n            this.getCompass();\n            if(this.set_cts !== this.state.cts){\n                if(this.local_control > 0) {\n                    this.local_control--;\n                }else {\n                    this.setCTS(this.state.cts);\n                }\n            }\n        }, 250);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    conditionSetCTS(value){\n        if(value < 0){\n            value = 360 + value;\n        }\n        if (value > 360){\n            value -= 360\n        }\n        this.set_cts = Math.round(value);\n    }\n\n    setCTS(value){\n        this.conditionSetCTS(value);\n        let  cts_slider_value = Math.round(this.set_cts/3.6 + 50);\n        if(cts_slider_value < 0){\n            cts_slider_value = 100 + cts_slider_value;\n        }\n        if(cts_slider_value > 100){\n            cts_slider_value -= 100;\n        }\n        this.setState({ cts_slider_value });\n    }\n\n    handleCTSSliderChange = (event, cts_slider_value) => {\n        this.setState({ cts_slider_value });\n        this.conditionSetCTS((cts_slider_value-50) * 3.6);\n        this.postCts();\n    };\n\n    handleTrimSliderChange = (event, trim_slider_value) => {\n        this.setState({ trim_slider_value });\n        let trim = (trim_slider_value - 50) /10 + this.state.cts_slider_value - 50;\n        this.conditionSetCTS(trim * 3.6);\n        this.postCts();\n    };\n\n    render() {\n        const { cts_slider_value, cts,  trim_slider_value, calibration, rudder, power, pitch, roll } = this.state;\n        let { heading } = this.state;\n        heading = Math.round(heading);\n        let power_bar = 180;\n        let power_width = 180 * Math.abs(power/1000);\n        let rudder_mark = 178 + rudder/30*178;\n        let colour = \"green\";\n        if(power < 0){\n            colour = \"red\";\n            power_bar = 180 + power/1000*180;\n        }\n        let cal = calibration;\n        let compass_cal = cal & 0x3;\n        cal = cal >>> 2;\n        let accel_cal = cal & 0x3;\n        cal = cal >>> 2;\n        let giro_cal = cal & 0x3;\n        cal = cal >>> 2;\n        let sys_cal = cal & 0x3;\n\n        let compass;\n        if(this.state.updated){\n            compass =  <SteeringCompass cts={this.set_cts} heading={this.state.heading} />\n        }else{\n            compass = <Paper><h2>No Communication: {this.url}</h2></Paper>;\n        }\n    return (\n                <div>\n                    <div className=\"floatLeft\">{calibration}: s{sys_cal} g{giro_cal} a{accel_cal} c{compass_cal}</div>\n                    <div className=\"pad\">\n                        {compass}\n                    </div>\n\n                    <div className=\"pad\">\n                        <svg width=\"410\" height=\"8\">\n                            <rect x={power_bar} y=\"4\" width={power_width} height=\"2\" fill={colour} />\n                            <rect x={rudder_mark} width=\"4\" height=\"8\" fill=\"blue\" />\n                            <rect x=\"179\"  width=\"2\" height=\"8\" fill=\"black\" />\n                            <rect x=\"0\"  width=\"2\" height=\"8\" fill=\"black\" />\n                            <rect x=\"360\"  width=\"2\" height=\"8\" fill=\"black\" />\n\n                        </svg>\n                         <h3>Heading <b>{heading}</b> M &nbsp;&nbsp; &nbsp;CTS <b>{cts}</b> M</h3>\n                         <h4>Roll <b>{roll}</b>  &nbsp;&nbsp; &nbsp;Pitch <b>{pitch}</b></h4>\n                        <h4>Course to Steer: </h4>\n                        <div>\n                            <span className=\"floatLeft\">\n                                <Button  color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts - 85);\n                                    this.postCts();\n                                }}>-85</Button>\n                                <Button   color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts - 5);\n                                    this.postCts();\n                                }}>-5</Button>\n                            </span>\n                            <span className=\"floatRight\">\n                                <Button color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts + 5);\n                                    this.postCts();\n                                }}>+5</Button>\n\n                                <Button color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts + 85);\n                                    this.postCts();\n                                }}>+85</Button>\n                            </span>\n                            <Slider\n                                value={cts_slider_value}\n                                aria-labelledby=\"set cts\"\n                                onChange={this.handleCTSSliderChange}\n                            />\n\n                        </div>\n                    <br /> <br />\n                    <h4>Trim Course:</h4>\n                        <Slider\n                            value={trim_slider_value}\n                            aria-labelledby=\"trim course\"\n                            onChange={this.handleTrimSliderChange}\n                        />\n                        <br/>\n                        <Button size=\"small\" color=\"primary\"  onClick={\n                            ()=>{\n                                this.local_control = this.local_control_count_down;\n                                let adjust = (trim_slider_value - 50)  * 0.36;\n                                this.setCTS(this.set_cts-adjust);\n                                this.setState({ trim_slider_value: 50 });\n                            }} >\n                            Keep\n                        </Button>\n\n                        <Button size=\"small\" color=\"primary\" onClick={\n                            ()=>{\n                                this.conditionSetCTS((cts_slider_value-50) * 3.6);\n                                this.postCts();\n                                this.setState({ trim_slider_value: 50 });\n                            }}>Return</Button>\n                    </div>\n                </div>\n\n    );\n  }\n}\n\nexport default Helm;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {config_host} from \"./App\";\n\n\nclass Config extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            kp: 0,\n            kd: 0,\n            ki: 0,\n            gain: 0,\n            rudder_rate: 0,\n            set_cal: 0,\n            slider_kp: 0,\n            slider_ki: 0,\n            slider_kd: 0,\n            slider_gain: 0,\n            slider_rudder_rate: 0,\n            gain_slider_multiplier: 12,\n        };\n\n        this.end_point = \"/api/calibration\";\n        this.can_update = true;\n        this.rudder_rate_scale = 50;\n    }\n\n    setCalibrationState(result){\n        let kp = result.kp;\n        let kd = result.kd;\n        let ki = result.ki;\n        let max_value = kp + kd + ki;\n        max_value= Math.max(max_value, 15);\n        let gain = 100/ max_value;\n\n        console.log(max_value, gain);\n        this.setState({\n            isLoaded: true,\n            updated: true,\n            kp: kp,\n            kd: kd,\n            ki: ki,\n            rudder_rate: result.rudder_rate,\n            max_value: max_value,\n            slider_kp: Math.round(kp * gain),\n            slider_kd: Math.round(kd * gain),\n            slider_ki: Math.round(ki * gain),\n            slider_gain: Math.round(max_value/this.state.gain_slider_multiplier),\n            slider_rudder_rate: Math.round(result.rudder_rate * this.rudder_rate_scale),\n            set_cal: result.set_cal,\n            calibration: result.calibration,\n        });\n    }\n\n    getCalibration(){\n        if(config_host !== \"\") {\n            if (this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setCalibrationState(result);\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postCalibration(){\n        if(this.can_update) {\n            this.can_update = false;\n            setTimeout(() => {\n                // Your code here\n\n                fetch(this.url, {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"kp\": this.state.slider_kp * this.state.max_value / 100,\n                        \"kd\": this.state.slider_kd * this.state.max_value / 100,\n                        \"ki\": this.state.slider_ki * this.state.max_value / 100,\n                        \"rudder_rate\": this.state.rudder_rate,\n                        \"set_cal\": this.state.set_cal,\n                    })\n                }).then(result => result.json())\n                    .then(result => {\n                            this.setCalibrationState(result);\n                            this.can_update = true;\n                        },\n                    );\n\n            }, 1000);\n        }\n    }\n\n    componentDidMount() {\n        this.getCalibration();\n        this.timer = setInterval(() => {\n            this.getCalibration();\n        }, 5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n\n    static relativePerCent(principle, a, b){\n        a += 0.5;\n        b += 0.5;\n        let factor = (100 - principle)/(a + b);\n        principle = Math.round(principle);\n        a = Math.round(a * factor);\n        b = Math.round(b * factor);\n        return [principle, a, b];\n    }\n\n    handleCalibrationButton= (event, action) => {\n        this.setState({set_cal: action});\n        this.postCalibration();\n    };\n\n    handleKpSliderChange = (event, slider_kp) => {\n        let result = Config.relativePerCent(slider_kp, this.state.slider_kd, this.state.slider_ki);\n        slider_kp = result[0];\n        let slider_kd = result[1];\n        let slider_ki = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n\n    };\n\n    handleKdSliderChange = (event, slider_kd) => {\n        let result = Config.relativePerCent(slider_kd, this.state.slider_kp, this.state.slider_ki);\n        slider_kd = result[0];\n        let slider_kp = result[1];\n        let slider_ki = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n    };\n\n    handleKiSliderChange = (event, slider_ki) => {\n        let result = Config.relativePerCent(slider_ki, this.state.slider_kp, this.state.slider_kd);\n        slider_ki = result[0];\n        let slider_kp = result[1];\n        let slider_kd = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n    };\n\n    handleGainSliderChange = (event, slider_gain) => {\n        slider_gain = Math.round(slider_gain);\n        slider_gain = Math.max(slider_gain, 5);\n        let max_value = slider_gain * this.state.gain_slider_multiplier ;\n        this.setState({slider_gain, max_value});\n        this.postCalibration();\n    };\n\n    handleRudderRateSliderChange= (event, slider_rudder_rate) => {\n        let rudder_rate = (slider_rudder_rate / this.rudder_rate_scale).toFixed(2);\n        this.setState ( {slider_rudder_rate, rudder_rate});\n        this.postCalibration();\n    };\n\n    render() {\n        const {slider_kp, slider_kd, slider_ki, slider_gain, slider_rudder_rate} = this.state;\n        let message;\n        if(this.state.updated){\n            message =\n\n                <div>\n                    <br /><br />\n                <h3>Relative Kp: {slider_kp}%</h3>\n                <Slider\n                value={slider_kp}\n                aria-labelledby=\"set kp\"\n                onChange={this.handleKpSliderChange}\n                />\n\n                <br /><br />\n                <h3>Relative Kd: {slider_kd}%</h3>\n                <Slider\n                value={slider_kd}\n                aria-labelledby=\"set kd\"\n                onChange={this.handleKdSliderChange}\n                />\n\n                <br /><br />\n                <h3>Relative Ki: {slider_ki}%</h3>\n                <Slider\n                value={slider_ki}\n                aria-labelledby=\"set ki\"\n                onChange={this.handleKiSliderChange}\n                />\n\n                <br /><br />\n                <h3>K Value at 100%: {slider_gain * this.state.gain_slider_multiplier}</h3>\n                <Slider\n                value={slider_gain}\n                aria-labelledby=\"set ki\"\n                onChange={this.handleGainSliderChange}\n                />\n                <br /><br />\n                <h3>Drive Rudder Rate: {(slider_rudder_rate / this.rudder_rate_scale).toFixed(2)} degrees per second</h3>\n                    <Slider\n                        value={slider_rudder_rate}\n                        aria-labelledby=\"set rudder rate\"\n                        onChange={this.handleRudderRateSliderChange}\n                    />\n\n                <br /><br />\n                <Paper className=\"pad\">\n\n                <h3>Compass/Orientation Chip Calibration:</h3>\n                <Button variant=\"contained\" size=\"small\" color=\"primary\"  onClick={\n                (e)=>{\n                    this.handleCalibrationButton(e, 1);\n\n                }}>Erase</Button>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={\n                (e)=>{\n                    this.handleCalibrationButton(e, 2)\n                }}>Store</Button>\n                <br /><br /><br />\n                </Paper>\n                </div>\n\n        }else{\n            message = <Paper><h2>No Communication: {this.url}</h2></Paper>\n        }\n        return(message);\n  }\n}\n\nexport default Config;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport {config_host} from './App';\n\n\n\nclass Simulator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            on: 0,\n            gain: 0,\n            speed: 0,\n            power_bias: 0,\n            slider_gain: 0,\n            slider_speed: 0,\n            slider_power_bias: 0,\n            checkedSimulator: 0,\n        };\n\n        this.end_point = \"/api/simulation\";\n        this.can_update = true;\n        this.gain_scale = 1;\n        this.speed_scale = 10;\n        this.power_bias_scale = .5;\n\n    }\n\n    setSimulationState(result){\n        this.setState({\n            isLoaded: true,\n            updated: true,\n            on: result.on,\n            gain: result.gain,\n            speed: result.speed,\n            power_bias: result.power_bias,\n            checkedSimulator: result.on,\n            slider_gain: Math.round(result.gain * this.gain_scale ),\n            slider_speed: Math.round(result.speed * this.speed_scale),\n            slider_power_bias: Math.round(result.power_bias * this.power_bias_scale/10),\n        });\n    }\n\n    getSimulation(){\n        if(config_host !== \"\") {\n            if (this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setSimulationState(result);\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postSimulation(){\n        if(this.can_update) {\n            this.can_update = false;\n            setTimeout(() => {\n                // Your code here\n                let on = 0;\n                if(this.state.checkedSimulator){\n                    on = 2;\n                }\n                fetch(this.url, {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        on: on,\n                        gain: this.state.gain,\n                        speed: this.state.speed,\n                        power_bias: this.state.power_bias,\n                    })\n                }).then(result => result.json())\n                    .then(result => {\n                            this.setSimulationState(result);\n                            this.can_update = true;\n                        },\n                    );\n\n            }, 1000);\n        }\n    }\n\n    componentDidMount() {\n        this.getSimulation();\n        this.timer = setInterval(() => {\n            this.getSimulation();\n        }, 5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    handleSpeedSliderChange = (event, slider_speed) => {\n        let speed = (slider_speed / this.speed_scale).toFixed(1);\n        this.setState({ slider_speed, speed });\n        this.postSimulation();\n\n    };\n\n    handlePowerBiasSliderChange =(event, slider_power_bias) => {\n        slider_power_bias -= 50;\n        let power_bias = (slider_power_bias / this.power_bias_scale * 10).toFixed(0);\n        this.setState({ slider_power_bias, power_bias});\n        this.postSimulation();\n\n    };\n    handleGainSliderChange = (event, slider_gain) => {\n        let gain = ((slider_gain)/ this.gain_scale).toFixed(0);\n        this.setState({slider_gain, gain});\n        this.postSimulation();\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n        this.postSimulation()\n    };\n\n    render() {\n        const {slider_speed, slider_gain, slider_power_bias} = this.state;\n        let message;\n        let simulator_control = <FormGroup row>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={this.state.checkedSimulator}\n                        onChange={this.handleChange('checkedSimulator')}\n                        value=\"checkedSimulator\"\n                        color=\"primary\"\n                    />\n                }\n\n                label=\"Simulator On\"\n            />\n        </FormGroup>;\n\n\n        if(this.state.updated){\n            if(this.state.on) {\n                message = <div>\n                    <br/><br/>\n                    {simulator_control}\n                    <br/><br/>\n                    <h3>Speed: {(slider_speed / this.speed_scale).toFixed(1)} kts</h3>\n                    <Slider\n                        value={slider_speed}\n                        aria-labelledby=\"set speed\"\n                        onChange={this.handleSpeedSliderChange}\n                    />\n\n\n                    <br/><br/>\n                    <h3>Gain: {Math.round( slider_gain / this.gain_scale)}</h3>\n                    <Slider\n                        value={slider_gain}\n                        aria-labelledby=\"set kd\"\n                        onChange={this.handleGainSliderChange}\n                    />\n\n                    <br/><br/>\n                    <h3>Applied force: {(slider_power_bias / this.power_bias_scale).toFixed(0)}% max drive</h3>\n                    <Slider\n                        value={slider_power_bias + 50}\n                        aria-labelledby=\"set power bias\"\n                        onChange={this.handlePowerBiasSliderChange}\n                    />\n                    <br/><br/>\n\n                </div>\n            }else{\n                message =<div>\n                    <br/><br/>\n                        {simulator_control}\n                        <br/><br/>\n                </div>\n            }\n        }else{\n            message = <Paper><h2>No Communication: {this.url}</h2></Paper>\n        }\n    return (message);\n  }\n}\n\nexport default Simulator;\n","import React, { Component } from 'react';\nimport \"./css/App.css\";\nimport \"what-input\";\nimport Helm from './Helm';\nimport Config from './Config';\nimport Simulator from './Simulator';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nlet config_host = \"\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    course:{\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 680,\n        width: 410,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\n\nclass App  extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        };\n        fetch('/config.json')\n            .then((r) => r.json())\n            .then( conf  => {\n                console.log(\"read config:\" + conf.host);\n                config_host = conf.host;\n            });\n    }\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <div>\n                <CssBaseline />\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        Navigation Dashboard  NavDash v0.6\n                    </Toolbar>\n\n                    <Tabs value={value} onChange={this.handleChange}>\n                        <Tab label=\"Dash Board\" />\n                        <Tab label=\"Auto-helm Set Up\" />\n                        <Tab label=\"Auto-helm Simulator\" />\n                    </Tabs>\n                </AppBar>\n                {value === 0 && <TabContainer>\n                                <Grid container className={classes.root} spacing={24}>\n                                    <Grid item>\n                                        <Paper  className={classes.course}><Helm /></Paper>\n                                    </Grid>\n                                </Grid>\n                                </TabContainer>}\n                {value === 1 && <TabContainer>\n                                <Grid container className={classes.root} spacing={24}>\n                                    <Grid item>\n                                        <Paper className={classes.course}>\n                                            <Helm/>\n                                        </Paper>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Paper className={classes.paper} >\n                                        <h2>Configuration</h2>\n                                        <Config />\n                                        </Paper>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Paper className={classes.paper}>\n                                        <h2>Simulation</h2>\n                                       <Simulator />\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </TabContainer>}\n                {value === 2 && <TabContainer><Simulator /></TabContainer>}\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(App);\nexport  {config_host};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/compass_rose.4794f22a.svg\";"],"sourceRoot":""}