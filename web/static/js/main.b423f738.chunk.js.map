{"version":3,"sources":["Compass.js","Helm.js","Config.js","Simulator.js","App.js","index.js","media/compass_rose.svg"],"names":["SteeringCompass","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","rose","displayed","cts","heading","_this$props","heading_svg","document","getElementById","console","log","setAttribute","heading_course","heading_rose","updateSVGCompass","react_default","a","createElement","className","react_svg","src","compass_rose","Component","Helm","handleCTSSliderChange","event","cts_slider_value","setState","conditionSetCTS","postCts","handleTrimSliderChange","trim_slider_value","trim","isLoaded","updated","config_host","end_point","set_cts","local_control","local_control_count_down","_this2","undefined","url","fetch","then","response","json","result","pitch","roll","calibration","_this3","method","headers","Accept","Content-Type","body","JSON","stringify","_this4","timer","setInterval","getCompass","setCTS","clearInterval","value","Math","round","compass","_this5","_this$state","Compass","Paper_default","Button_default","color","onClick","Slider_default","aria-labelledby","onChange","size","adjust","Config","handleKpSliderChange","slider_kp","relativePerCent","slider_kd","slider_ki","postCalibration","handleKdSliderChange","handleKiSliderChange","handleGainSliderChange","slider_gain","max_value","max","gain_slider_multiplier","handleRudderRateSliderChange","slider_rudder_rate","rudder_rate","rudder_rate_scale","toFixed","kp","kd","ki","gain","set_cal","can_update","setCalibrationState","setTimeout","getCalibration","variant","principle","b","factor","Simulator","handleSpeedSliderChange","slider_speed","speed","speed_scale","postSimulation","handlePowerBiasSliderChange","slider_power_bias","power_bias","power_bias_scale","gain_scale","handleChange","name","defineProperty","target","checked","on","checkedSimulator","setSimulationState","getSimulation","simulator_control","FormGroup_default","row","FormControlLabel_default","control","Switch_default","label","TabContainer","Typography_default","component","style","padding","children","App","r","conf","host","classes","CssBaseline_default","AppBar_default","position","Toolbar_default","Tabs_default","Tab_default","Grid_default","container","root","spacing","item","course","src_Helm","paper","src_Config","src_Simulator","withStyles","theme","flexGrow","backgroundColor","palette","background","unit","textAlign","text","secondary","height","width","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b423f738.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport compass_rose from './media/compass_rose.svg';\nimport ReactSVG from 'react-svg';\n\n\nclass SteeringCompass extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            rose: 0,\n\n        };\n        this.displayed = {\n            rose: -1,\n            cts: -1,\n            heading: -1,\n        }\n    }\n\n    updateSVGCompass(){\n        let {heading, cts} = this.props;\n        let rose = this.state.rose;\n        if (heading !== this.displayed.heading) {\n            // $('#headingDisplay').val(this.heading);\n            const heading_svg = document.getElementById('compass_heading');\n            if (heading_svg) {\n                console.log(heading_svg);\n                heading_svg.setAttribute(\"transform\", \"rotate(\" + heading + \",600,600)\");\n                //heading_svg.setAttribute(\"transform-origin\", \"600 600\");\n                this.displayed.heading = heading\n                }\n        }\n        if (cts !== this.displayed.cts){\n            const heading_course = document.getElementById('compass_course');\n            if(heading_course){\n                console.log(heading_course);\n                heading_course.setAttribute(\"transform\", \"rotate(\" + cts  + \",600,600)\");\n                //heading_course.setAttribute(\"transform-origin\", \"50% 50%\");\n            }\n        }\n        if (rose !== this.displayed.rose){\n            const heading_rose = document.getElementById('compass_rose');\n            if(heading_rose) {\n                console.log(heading_rose);\n                heading_rose.setAttribute(\"transform\", \"rotate(\" + rose + \",600,600)\");\n                //heading_rose.setAttribute(\"transform-origin\", \"50% 50%\");\n                this.displayed.rose = rose\n            }\n        }\n    }\n\n    render() {\n        this.updateSVGCompass();\n    return (\n        <div className=\"App-Compass\">\n            <ReactSVG src={compass_rose} />\n        </div>\n\n    );\n  }\n}\n\nexport default SteeringCompass;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport SteeringCompass from './Compass';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport {config_host} from './App';\n\n\nclass Helm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            cts: 0,\n            heading: 0,\n            rose: 0,\n            cts_slider_value: 50,\n            trim_slider_value: 50,\n        };\n        console.log('configuration:' + config_host);\n        //this.url = process.env.REACT_APP_THIS_HOST + \":8079/api/orientation\";\n        this.end_point = \"/api/orientation\";\n        this.set_cts = 0;\n        this.local_control = 0;\n        this.local_control_count_down = 3;\n    }\n\n    getCompass(){\n        console.log('configuration:' + config_host);\n\n        if(config_host !== \"\") {\n            if(this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: true,\n                            cts: result.cts,\n                            heading: result.heading,\n                            pitch: result.pitch,\n                            roll: result.roll,\n                            calibration: result.calibration,\n                        });\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postCts(){\n        fetch(this.url, {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                    \"cts\": this.set_cts\n                })\n        }).then(result=>result.json())\n            .then(result => {\n                    this.local_control = this.local_control_count_down;\n                    this.setState({\n                        isLoaded: true,\n                        updated: true,\n                        cts: result.cts,\n                        heading: result.heading,\n                    });\n                },\n            );\n\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.getCompass();\n            if(this.set_cts !== this.state.cts){\n                if(this.local_control > 0) {\n                    this.local_control--;\n                }else {\n                    this.setCTS(this.state.cts);\n                }\n            }\n        }, 250);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    conditionSetCTS(value){\n        if(value < 0){\n            value = 360 + value;\n        }\n        if (value > 360){\n            value -= 360\n        }\n        this.set_cts = Math.round(value);\n    }\n\n    setCTS(value){\n        this.conditionSetCTS(value);\n        let  cts_slider_value = Math.round(this.set_cts/3.6 + 50);\n        if(cts_slider_value < 0){\n            cts_slider_value = 100 + cts_slider_value;\n        }\n        if(cts_slider_value > 100){\n            cts_slider_value -= 100;\n        }\n        this.setState({ cts_slider_value });\n    }\n\n    handleCTSSliderChange = (event, cts_slider_value) => {\n        this.setState({ cts_slider_value });\n        this.conditionSetCTS((cts_slider_value-50) * 3.6);\n        this.postCts();\n    };\n\n    handleTrimSliderChange = (event, trim_slider_value) => {\n        this.setState({ trim_slider_value });\n        let trim = (trim_slider_value - 50) /10 + this.state.cts_slider_value - 50;\n        this.conditionSetCTS(trim * 3.6);\n        this.postCts();\n    };\n\n    render() {\n        const { cts_slider_value, cts,  trim_slider_value} = this.state;\n        let { heading } = this.state;\n        heading = Math.round(heading);\n        let compass;\n        if(this.state.updated){\n            compass =  <SteeringCompass cts={this.set_cts} heading={this.state.heading} />\n        }else{\n            compass = <Paper><h2>No Communication: {this.url}</h2></Paper>;\n        }\n    return (\n                <div>\n                    <div className=\"pad\">\n                        {compass}\n                    </div>\n\n                    <div className=\"pad\">\n                         <h3>Heading <b>{heading}</b> M &nbsp;&nbsp; &nbsp;CTS <b>{cts}</b> M</h3>\n                        <h4>Course to Steer: </h4>\n                        <div>\n                            <span className=\"floatLeft\">\n                                <Button  color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts - 85);\n                                    this.postCts();\n                                }}>-85</Button>\n                                <Button   color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts - 5);\n                                    this.postCts();\n                                }}>-5</Button>\n                            </span>\n                            <span className=\"floatRight\">\n                                <Button color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts + 5);\n                                    this.postCts();\n                                }}>+5</Button>\n\n                                <Button color=\"primary\" onClick={\n                                ()=>{\n                                    this.setCTS( this.set_cts + 85);\n                                    this.postCts();\n                                }}>+85</Button>\n                            </span>\n                            <Slider\n                                value={cts_slider_value}\n                                aria-labelledby=\"set cts\"\n                                onChange={this.handleCTSSliderChange}\n                            />\n\n                        </div>\n                    <br /> <br />\n                    <h4>Trim Course:</h4>\n                        <Slider\n                            value={trim_slider_value}\n                            aria-labelledby=\"trim course\"\n                            onChange={this.handleTrimSliderChange}\n                        />\n                        <br/>\n                        <Button size=\"small\" color=\"primary\"  onClick={\n                            ()=>{\n                                this.local_control = this.local_control_count_down;\n                                let adjust = (trim_slider_value - 50)  * 0.36;\n                                this.setCTS(this.set_cts-adjust);\n                                this.setState({ trim_slider_value: 50 });\n                            }} >\n                            Keep\n                        </Button>\n\n                        <Button size=\"small\" color=\"primary\" onClick={\n                            ()=>{\n                                this.conditionSetCTS((cts_slider_value-50) * 3.6);\n                                this.postCts();\n                                this.setState({ trim_slider_value: 50 });\n                            }}>Return</Button>\n                    </div>\n                </div>\n\n    );\n  }\n}\n\nexport default Helm;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {config_host} from \"./App\";\n\n\nclass Config extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            kp: 0,\n            kd: 0,\n            ki: 0,\n            gain: 0,\n            rudder_rate: 0,\n            set_cal: 0,\n            slider_kp: 0,\n            slider_ki: 0,\n            slider_kd: 0,\n            slider_gain: 0,\n            slider_rudder_rate: 0,\n            gain_slider_multiplier: 12,\n        };\n\n        this.end_point = \"/api/calibration\";\n        this.can_update = true;\n        this.rudder_rate_scale = 50;\n    }\n\n    setCalibrationState(result){\n        let kp = result.kp;\n        let kd = result.kd;\n        let ki = result.ki;\n        let max_value = kp + kd + ki;\n        max_value= Math.max(max_value, 15);\n        let gain = 100/ max_value;\n\n        console.log(max_value, gain);\n        this.setState({\n            isLoaded: true,\n            updated: true,\n            kp: kp,\n            kd: kd,\n            ki: ki,\n            rudder_rate: result.rudder_rate,\n            max_value: max_value,\n            slider_kp: Math.round(kp * gain),\n            slider_kd: Math.round(kd * gain),\n            slider_ki: Math.round(ki * gain),\n            slider_gain: Math.round(max_value/this.state.gain_slider_multiplier),\n            slider_rudder_rate: Math.round(result.rudder_rate * this.rudder_rate_scale),\n            set_cal: result.set_cal,\n            calibration: result.calibration,\n        });\n    }\n\n    getCalibration(){\n        if(config_host !== \"\") {\n            if (this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setCalibrationState(result);\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postCalibration(){\n        if(this.can_update) {\n            this.can_update = false;\n            setTimeout(() => {\n                // Your code here\n\n                fetch(this.url, {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"kp\": this.state.slider_kp * this.state.max_value / 100,\n                        \"kd\": this.state.slider_kd * this.state.max_value / 100,\n                        \"ki\": this.state.slider_ki * this.state.max_value / 100,\n                        \"rudder_rate\": this.state.rudder_rate,\n                        \"set_cal\": this.set_cal,\n                    })\n                }).then(result => result.json())\n                    .then(result => {\n                            this.setCalibrationState(result);\n                            this.can_update = true;\n                        },\n                    );\n\n            }, 1000);\n        }\n    }\n\n    componentDidMount() {\n        this.getCalibration();\n    }\n\n    static relativePerCent(principle, a, b){\n        a += 0.5;\n        b += 0.5;\n        let factor = (100 - principle)/(a + b);\n        principle = Math.round(principle);\n        a = Math.round(a * factor);\n        b = Math.round(b * factor);\n        return [principle, a, b];\n    }\n\n    handleKpSliderChange = (event, slider_kp) => {\n        let result = Config.relativePerCent(slider_kp, this.state.slider_kd, this.state.slider_ki);\n        slider_kp = result[0];\n        let slider_kd = result[1];\n        let slider_ki = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n\n    };\n\n    handleKdSliderChange = (event, slider_kd) => {\n        let result = Config.relativePerCent(slider_kd, this.state.slider_kp, this.state.slider_ki);\n        slider_kd = result[0];\n        let slider_kp = result[1];\n        let slider_ki = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n    };\n\n    handleKiSliderChange = (event, slider_ki) => {\n        let result = Config.relativePerCent(slider_ki, this.state.slider_kp, this.state.slider_kd);\n        slider_ki = result[0];\n        let slider_kp = result[1];\n        let slider_kd = result[2];\n        this.setState({ slider_kp, slider_kd, slider_ki});\n        this.postCalibration();\n    };\n\n    handleGainSliderChange = (event, slider_gain) => {\n        slider_gain = Math.round(slider_gain);\n        slider_gain = Math.max(slider_gain, 5);\n        let max_value = slider_gain * this.state.gain_slider_multiplier ;\n        this.setState({slider_gain, max_value});\n        this.postCalibration();\n    };\n\n    handleRudderRateSliderChange= (event, slider_rudder_rate) => {\n        let rudder_rate = (slider_rudder_rate / this.rudder_rate_scale).toFixed(2);\n        this.setState ( {slider_rudder_rate, rudder_rate});\n        this.postCalibration();\n    };\n\n    render() {\n        const {slider_kp, slider_kd, slider_ki, slider_gain, slider_rudder_rate} = this.state;\n        let message;\n        if(this.state.updated){\n            message =\n\n                <div>\n                    <br /><br />\n                <h3>Relative Kp: {slider_kp}%</h3>\n                <Slider\n                value={slider_kp}\n                aria-labelledby=\"set kp\"\n                onChange={this.handleKpSliderChange}\n                />\n\n                <br /><br />\n                <h3>Relative Kd: {slider_kd}%</h3>\n                <Slider\n                value={slider_kd}\n                aria-labelledby=\"set kd\"\n                onChange={this.handleKdSliderChange}\n                />\n\n                <br /><br />\n                <h3>Relative Ki: {slider_ki}%</h3>\n                <Slider\n                value={slider_ki}\n                aria-labelledby=\"set ki\"\n                onChange={this.handleKiSliderChange}\n                />\n\n                <br /><br />\n                <h3>K Value at 100%: {slider_gain * this.state.gain_slider_multiplier}</h3>\n                <Slider\n                value={slider_gain}\n                aria-labelledby=\"set ki\"\n                onChange={this.handleGainSliderChange}\n                />\n                <br /><br />\n                <h3>Drive Rudder Rate: {(slider_rudder_rate / this.rudder_rate_scale).toFixed(2)} degrees per second</h3>\n                    <Slider\n                        value={slider_rudder_rate}\n                        aria-labelledby=\"set rudder rate\"\n                        onChange={this.handleRudderRateSliderChange}\n                    />\n\n                <br /><br />\n                <Paper className=\"pad\">\n\n                <h3>Compass/Orientation Chip Calibration:</h3>\n                <Button variant=\"contained\" size=\"small\" color=\"primary\"  onClick={\n                ()=>{\n\n                }}>Erase</Button>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={\n                ()=>{\n\n                }}>Store</Button>\n                <br /><br /><br />\n                </Paper>\n                </div>\n\n        }else{\n            message = <Paper><h2>No Communication: {this.url}</h2></Paper>\n        }\n        return(message);\n  }\n}\n\nexport default Config;\n","import React, { Component } from 'react';\nimport Slider from '@material-ui/lab/Slider';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport {config_host} from './App';\n\n\n\nclass Simulator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            updated: false,\n            on: 0,\n            gain: 0,\n            speed: 0,\n            power_bias: 0,\n            slider_gain: 0,\n            slider_speed: 0,\n            slider_power_bias: 0,\n            checkedSimulator: 0,\n        };\n\n        this.end_point = \"/api/simulation\";\n        this.can_update = true;\n        this.gain_scale = 1;\n        this.speed_scale = 10;\n        this.power_bias_scale = .5;\n\n    }\n\n    setSimulationState(result){\n        this.setState({\n            isLoaded: true,\n            updated: true,\n            on: result.on,\n            gain: result.gain,\n            speed: result.speed,\n            power_bias: result.power_bias,\n            checkedSimulator: result.on,\n            slider_gain: Math.round(result.gain * this.gain_scale ),\n            slider_speed: Math.round(result.speed * this.speed_scale),\n            slider_power_bias: Math.round(result.power_bias * this.power_bias_scale/10),\n        });\n    }\n\n    getSimulation(){\n        if(config_host !== \"\") {\n            if (this.url === undefined) {\n                this.url = config_host + this.end_point;\n            }\n            fetch(this.url)\n                .then(response => response.json())\n                .then(\n                    (result) => {\n                        this.setSimulationState(result);\n                    },\n                    // Note: it's important to handle errors here\n                    // instead of a catch() block so that we don't swallow\n                    // exceptions from actual bugs in components.\n                    (error) => {\n                        this.setState({\n                            isLoaded: true,\n                            updated: false,\n                            error\n                        });\n\n                    }\n                );\n        }\n    }\n\n    postSimulation(){\n        if(this.can_update) {\n            this.can_update = false;\n            setTimeout(() => {\n                // Your code here\n                let on = 0;\n                if(this.state.checkedSimulator){\n                    on = 2;\n                }\n                fetch(this.url, {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        on: on,\n                        gain: this.state.gain,\n                        speed: this.state.speed,\n                        power_bias: this.state.power_bias,\n                    })\n                }).then(result => result.json())\n                    .then(result => {\n                            this.setSimulationState(result);\n                            this.can_update = true;\n                        },\n                    );\n\n            }, 1000);\n        }\n    }\n\n    componentDidMount() {\n        this.getSimulation();\n    }\n\n    handleSpeedSliderChange = (event, slider_speed) => {\n        let speed = (slider_speed / this.speed_scale).toFixed(1);\n        this.setState({ slider_speed, speed });\n        this.postSimulation();\n\n    };\n\n    handlePowerBiasSliderChange =(event, slider_power_bias) => {\n        slider_power_bias -= 50;\n        let power_bias = (slider_power_bias / this.power_bias_scale * 10).toFixed(0);\n        this.setState({ slider_power_bias, power_bias});\n        this.postSimulation();\n\n    };\n    handleGainSliderChange = (event, slider_gain) => {\n        let gain = ((slider_gain)/ this.gain_scale).toFixed(0);\n        this.setState({slider_gain, gain});\n        this.postSimulation();\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n        this.postSimulation()\n    };\n\n    render() {\n        const {slider_speed, slider_gain, slider_power_bias} = this.state;\n        let message;\n        let simulator_control = <FormGroup row>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={this.state.checkedSimulator}\n                        onChange={this.handleChange('checkedSimulator')}\n                        value=\"checkedSimulator\"\n                        color=\"primary\"\n                    />\n                }\n\n                label=\"Simulator On\"\n            />\n        </FormGroup>;\n\n\n        if(this.state.updated){\n            if(this.state.on) {\n                message = <div>\n                    <br/><br/>\n                    {simulator_control}\n                    <br/><br/>\n                    <h3>Speed: {(slider_speed / this.speed_scale).toFixed(1)} kts</h3>\n                    <Slider\n                        value={slider_speed}\n                        aria-labelledby=\"set speed\"\n                        onChange={this.handleSpeedSliderChange}\n                    />\n\n\n                    <br/><br/>\n                    <h3>Gain: {Math.round( slider_gain / this.gain_scale)}</h3>\n                    <Slider\n                        value={slider_gain}\n                        aria-labelledby=\"set kd\"\n                        onChange={this.handleGainSliderChange}\n                    />\n\n                    <br/><br/>\n                    <h3>Applied force: {(slider_power_bias / this.power_bias_scale).toFixed(0)}% max drive</h3>\n                    <Slider\n                        value={slider_power_bias + 50}\n                        aria-labelledby=\"set power bias\"\n                        onChange={this.handlePowerBiasSliderChange}\n                    />\n                    <br/><br/>\n\n                </div>\n            }else{\n                message =<div>\n                    <br/><br/>\n                        {simulator_control}\n                        <br/><br/>\n                </div>\n            }\n        }else{\n            message = <Paper><h2>No Communication: {this.url}</h2></Paper>\n        }\n    return (message);\n  }\n}\n\nexport default Simulator;\n","import React, { Component } from 'react';\nimport \"./css/App.css\";\nimport \"what-input\";\nimport Helm from './Helm';\nimport Config from './Config';\nimport Simulator from './Simulator';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nlet config_host = \"\";\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    course:{\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 680,\n        width: 410,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\n\nclass App  extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        };\n        fetch('/config.json')\n            .then((r) => r.json())\n            .then( conf  => {\n                console.log(\"read config:\" + conf.host);\n                config_host = conf.host;\n            });\n    }\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <div>\n                <CssBaseline />\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        Navigation Dashboard  NavDash v0.5\n                    </Toolbar>\n\n                    <Tabs value={value} onChange={this.handleChange}>\n                        <Tab label=\"Dash Board\" />\n                        <Tab label=\"Auto-helm Set Up\" />\n                        <Tab label=\"Auto-helm Simulator\" />\n                    </Tabs>\n                </AppBar>\n                {value === 0 && <TabContainer>\n                                <Grid container className={classes.root} spacing={24}>\n                                    <Grid item>\n                                        <Paper  className={classes.course}><Helm /></Paper>\n                                    </Grid>\n                                </Grid>\n                                </TabContainer>}\n                {value === 1 && <TabContainer>\n                                <Grid container className={classes.root} spacing={24}>\n                                    <Grid item>\n                                        <Paper className={classes.course}>\n                                            <Helm/>\n                                        </Paper>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Paper className={classes.paper} >\n                                        <h2>Configuration</h2>\n                                        <Config />\n                                        </Paper>\n                                    </Grid>\n\n                                    <Grid item>\n                                        <Paper className={classes.paper}>\n                                        <h2>Simulation</h2>\n                                       <Simulator />\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </TabContainer>}\n                {value === 2 && <TabContainer><Simulator /></TabContainer>}\n            </div>\n        );\n    }\n}\n\n\nexport default withStyles(styles)(App);\nexport  {config_host};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/compass_rose.4794f22a.svg\";"],"sourceRoot":""}